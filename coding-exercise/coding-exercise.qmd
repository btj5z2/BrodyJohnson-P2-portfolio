---
title: "R Coding Exercise"
---

Placeholder file for the future R coding exercise.

#Loading and checking data

Installing libraries

```{r}
#install.packages("dslabs")
library(dslabs) #gives us access to gapminder data set
library(tidyverse) #useful for data processing
```

The following helps us understand more about the gapminder data set.

```{r}
#Look at help file for gapminder data set
help(gapminder)
#Look at data structure 
str(gapminder)
#Getting a summary of the data 
summary(gapminder)
#Determining type of object gapminder is
class(gapminder) #data frame
```

# Processing data

Filtering the gapminder data set to only contain observations with Africa as the continent as a new data set (africadata).

```{r}
africadata = gapminder %>% filter(continent == "Africa") #filtering the data to only contain "Africa"
str(africadata) #data set structure
summary(africadata) #data set summary
```

Creating a new data set from the africadata set to only contain two variables: infant_mortality and life_expectancy.

```{r}
inflife = africadata %>% select(infant_mortality, life_expectancy) #selecting only 2 variables of interest from the africadata data set
str(inflife) #data set structure
summary(inflife) #data set summary
```

Creating a new data set from the africadata set to only contain two variables: population and life_expectancy.

```{r}
poplife = africadata %>% select(population, life_expectancy) #selecting only 2 variables of interest from the africadata data set
str(poplife) #data set structure
summary(poplife) #data set summary
```

# Plotting

Plotting infant mortality vs life expectancy

```{r}
ggplot(inflife, mapping = aes(x = infant_mortality, y = life_expectancy)) +
  geom_point()
  
```

Plotting population vs life expectancy

```{r}
ggplot(poplife, mapping = aes(x = log(population), y = life_expectancy)) +
  geom_point()
```

I suspect the streaks of data points we are seeing in each plot above are of the same countries over time (years).

# More data processing

Below, we are figuring out how many NA values there are for each year in the africa data set.

```{r}
africadata_grouped = group_by(africadata, year) #grouping the data set by year
summarise(africadata_grouped, numnas = sum(is.na(infant_mortality))) #summing the NA values for each year 
```

```{r}
africadata2000 = africadata %>% filter(year == 2000) #filtering africadata for year 2000 only
str(africadata2000)
summary(africadata2000)
```

# More plotting

Plotting 2000 infant mortality vs life expectancy

```{r}
ggplot(africadata2000, mapping = aes(x = infant_mortality, y = life_expectancy)) +
  geom_point()
  
```

Plotting 2000 population vs life expectancy

```{r}
ggplot(africadata2000, mapping = aes(x = log(population), y = life_expectancy)) +
  geom_point()
```

# Simple Model Fits

Applying a linear model to the year 2000 data with life expectancy as the outcome and infant mortality as the predictor.

```{r}

fit1 = lm(life_expectancy ~ infant_mortality, data = africadata2000)
summary(fit1)

```

Applying a linear model to the year 2000 data with life expectancy as the outcome and population as the predictor.

```{r}

fit2 = lm(life_expectancy ~ population, data = africadata2000)
summary(fit2)

```

Assuming a significance value of 0.05, it appears infant mortality is a statistically significant variable when it comes to life expectancy while population size is not.

# This section contributed by Tim Harrison.

```{r}
# Load the death_prob dataset
data(death_prob)

# Display help page for death_prob dataset
help(death_prob)

# Get an overview of data structure
str(death_prob)

# Summary of the dataset
summary(death_prob)

# Check the class of the object
class(death_prob)


# Histogram of death probabilities
hist(death_prob$prob, 
     main = "Distribution of Death Probabilities",
     xlab = "Death Probability")

#Boxplot of death probabilities by sex
boxplot(prob ~ sex, data = death_prob,
        main = "Death Probabilities by Sex",
        xlab = "Sex", ylab = "Death Probability")

# Optionally, create some tables if relevant

table(death_prob$sex)

# Run a simple statistical model (linear regression example)

model <- lm(prob ~ age + sex, data = death_prob)

# Print model summary
summary(model)




```
