[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Guillermo Gallardo contributed to this exercise.\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section. I added 2 columns to the ‘exampledata’ data set creating ‘exampledata2.’ The first column I added is a numeric variable called ‘WkMiles’ which is the average number of miles that person drives on any given week. The second variable I added is called ‘VehColor’ which is the color of the primary vehicle that person drives. Possible values for ‘VehColor’ consist of black, brown, white, silver, and other."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nVehColor\n0\n1\n5\n6\n0\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nWkMiles\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n281.33333\n305.18191\n50\n132\n150\n200\n1000\n▇▁▁▁▁\n\n\n\n\n\n\n\n\nThe table below shows the results from a linear regression model describing a persons height by the number of miles they drive in a week and color of the vehicle they drive.\n\n\n\n\nTable 2: Linear model using height as outcome, weekly miles driven and vehicle color as predictors.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n168.7097674\n8.1712950\n20.6466378\n0.0002485\n\n\nWkMiles\n-0.0095442\n0.0149342\n-0.6390808\n0.5682210\n\n\nVehColorbrown\n2.1534884\n10.6422833\n0.2023521\n0.8525870\n\n\nVehColorother\n15.5500651\n14.1124537\n1.1018683\n0.3509865\n\n\nVehColorsilver\n10.7218605\n14.0493023\n0.7631596\n0.5008926\n\n\nVehColorwhite\n-33.8009302\n13.8996782\n-2.4317779\n0.0931818"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\nFigure 2 shows the boxplots of peoples height grouped by the color of vehicle they drive.\n\n\n\n\n\n\n\n\nFigure 2: Height by vehicle color.\n\n\n\n\n\nFigure 3 shows a scatterplot of a persons weight vs the number of miles they drive weekly.\n\n\n\n\n\n\n\n\nFigure 3: Avg Weekly miles drive vs persons weight."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 3 shows a summary of a linear model fit.\n\n\n\n\nTable 3: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "In this exercise, I recreated a graph and table in a FiveThiryEight article linked below. The data depicts the contributions made to each political party by different sports owners and commissioners. All in all, a majority of contributions are made to the Republican party. The one exception would be the WNBA where they use to not contribute as much to Republicans but each year showed an increase until more were being contributed to Republicans than Democrats.\nhttps://fivethirtyeight.com/features/inside-the-political-donation-history-of-wealthy-sports-owners/\nSince the data was not given, the values were estimated by taking a screenshot from the article and then using WebPlotDigitizer (https://automeris.io/).\n\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(grid)\n# Example data preparation (replace with your actual data loading)\nsports_owners_data &lt;- read.csv(\"political_donations_by_sport.csv\", header = TRUE)\nsports_owners_data = pivot_longer(sports_owners_data, \n                 cols = starts_with(\"TO\"),\n                 names_to = \"Owner\",\n                 values_to = \"Total_Donation\")\nsports_owners_data$Owner = substring(sports_owners_data$Owner, first = 4)\n\n# Plotting using ggplot2\nggplot(sports_owners_data, aes(x = YEAR, y = Total_Donation, fill = Owner)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = c(\"blue\", \"red\")) +  # Example color scale, replace as needed\n  labs(\n    title = \"Across leagues, majority of donations go to Republicans\",\n    subtitle = \"Share of donations from team owners in six leagues, per year, league and party\",\n    x=\"\",\n    y=\"\",\n    fill = \"DONATIONS TO\",\n    caption = \"Donations may not sum to 100 percent due to bipartisan donations.\"\n  ) +\n  facet_wrap(~LEAGUE)+\n  theme_minimal()+\n  theme(legend.position = \"top\", \n        strip.text = element_text(face=\"bold\"),\n        plot.title = element_text(size = 16, face = \"bold\"),     # Title text size and bold\n        plot.subtitle = element_text(size = 13), # Subtitle text size \n        legend.text = element_text(size = 10),                    # Legend text size\n        legend.title = element_text(size = 10, face = \"bold\"),\n        plot.caption = element_text(hjust=0, color = \"darkgray\"),\n        plot.background = element_rect(fill=\"lightgray\"))+\n  scale_x_continuous(breaks = c(2016, 2018, 2020)) \n\n\n\n\n\n\n\n\nBelow is a table of the actual dollar amounts contributed to each party broken up by league.\n\n#installed.packages(\"gt\")\nlibrary(knitr)\nlibrary(gt)\ndata = data.frame(\n  LEAGUE = c(\"MLB\", \"NBA\", \"NHL\", \"NFL\", \"WNBA\", \"NASCAR\"),\n  TO_REPUBLICANS = c(15181761, 8372300, 7087116, 5032470, 1338459, 576110),\n  TO_DEMOCRATS = c(5184604, 2641487, 1726733, 873500, 1634153, 93983)\n)\ndata$TOTAL = data$TO_REPUBLICANS + data$TO_DEMOCRATS\n\n# Create a styled table using gt\nstyled_table &lt;- data %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"MLB owners have donated the most\"),\n    subtitle = md(\"Specifically partisan contributions from owners and commissioners in the NFL, NBA, WNBA, NHL, MLB, and NASCAR, by party, 2016-2020\")\n  ) %&gt;%\n  tab_options(\n    heading.align = \"left\"\n  ) %&gt;% \n  fmt_currency(\n    columns = c(TO_REPUBLICANS, TO_DEMOCRATS, TOTAL),\n    currency = \"USD\",\n    decimals = 0\n  ) %&gt;%\n  tab_style(\n    style = list(\n      cell_text(align = \"right\")\n    ),\n    locations = cells_body(col=2:4)\n  ) %&gt;%\n  tab_options(\n    table.width = \"80%\"\n    #column_labels.background.color = \"#0073e6\",\n    #row_labels.width.px = 100,\n    #row_labels.border.right = TRUE,\n    #table.border.top.width.px = 2,\n    #table.border.bottom.width.px = 2\n  ) %&gt;% \n  tab_footnote(\n    footnote =  \"SOURCE: FEDERAL ELECTION COMMISSION, OPENSECRETS\"\n  )\n\n# Print the styled table\nstyled_table\n\n\n\n\n\n\n\n\n\n\n\n\n\nMLB owners have donated the most\n\n\nSpecifically partisan contributions from owners and commissioners in the NFL, NBA, WNBA, NHL, MLB, and NASCAR, by party, 2016-2020\n\n\nLEAGUE\nTO_REPUBLICANS\nTO_DEMOCRATS\nTOTAL\n\n\n\n\nMLB\n$15,181,761\n$5,184,604\n$20,366,365\n\n\nNBA\n$8,372,300\n$2,641,487\n$11,013,787\n\n\nNHL\n$7,087,116\n$1,726,733\n$8,813,849\n\n\nNFL\n$5,032,470\n$873,500\n$5,905,970\n\n\nWNBA\n$1,338,459\n$1,634,153\n$2,972,612\n\n\nNASCAR\n$576,110\n$93,983\n$670,093\n\n\n\nSOURCE: FEDERAL ELECTION COMMISSION, OPENSECRETS"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Trip to Colorado in February, 2024"
  },
  {
    "objectID": "aboutme.html#school-work",
    "href": "aboutme.html#school-work",
    "title": "About me",
    "section": "School & Work",
    "text": "School & Work\nI graduated in 2018 from Missouri S&T with a Bachelor of Science in Mechanical Engineering. Before moving to San Antonio, I completed two internships in Saint Louis, MO and a co-op with Ford Motor Company in Kansas City, MO. In San Antonio, I work at Southwest Research Institute (SwRI) evaluating fuels, engine oils, and driveline lubricants in automobiles with the use of SwRI’s Mileage Accumulation Dynamometer (MAD) facility. I also manage tests evaluating fuels for their performance such as the ASTM D6201 Standard Test Method for Dynamometer Evaluation of Unleaded Spark-Ignition Engine Fuel for Intake Valve Deposit (IVD) Formation and the Intake Valve Sticking (IVS) test developed by SwRI."
  },
  {
    "objectID": "aboutme.html#data-analysis-experience-interested-research-areas",
    "href": "aboutme.html#data-analysis-experience-interested-research-areas",
    "title": "About me",
    "section": "Data Analysis Experience & Interested Research Areas",
    "text": "Data Analysis Experience & Interested Research Areas\nBefore starting this program in Data Analytics, my experience was limited to a couple of statistics course in high school and college. At work, I work with a lot of time-series operational data from running tests but the extent of data analysis primarily consists of creating visualizations. With this being said, one area of research of interest is the automotive industry. Outside of testing cars during the day, I love diving into data related to sports so most anything sports related would be another interesting research area.\n\nInteresting Video Related to Data\nBelow is link to an interesting Ted Talk on “The Future of Data.” In this video, Tiago Santos touches on countless examples data has been used for in the past and contrasts them to examples of how data is being used in the present whether it be in business, pharmaceuticals, and sports.He goes on to explain how moving forward, data is ever changing with respect to its volume, value, variety, velocity, and veracity. Tiago concludes about the importance of having responsible people at the center of businesses and governments who are able to take in relevant data to make impactful decisions.\nThe Future of Data | Tiago Santos | TEDxEUBusinessSchoolBarcelona"
  },
  {
    "objectID": "aboutme.html#fun-facts",
    "href": "aboutme.html#fun-facts",
    "title": "About me",
    "section": "Fun Facts",
    "text": "Fun Facts\nI love playing sports. The primary sports I’ve consistently participated in would be Ultimate Frisbee and endurance races. For the last ~10 years, I would travel the United States to compete in Ultimate Frisbee tournaments. As for endurance races, I’ve enjoyed running half marathons for several years but my primary achievements would consist of completing a full marathon in 2018 and then a half Ironman in 2023. I am taking a hiatus from the activities as I pursue my Masters but try to make time for golf, snowboarding trips, mountain biking, sand volleyball, etc."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "#Loading and checking data\nInstalling libraries\n\n#install.packages(\"dslabs\")\nlibrary(dslabs) #gives us access to gapminder data set\nlibrary(tidyverse) #useful for data processing\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nThe following helps us understand more about the gapminder data set.\n\n#Look at help file for gapminder data set\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n#Look at data structure \nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#Getting a summary of the data \nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#Determining type of object gapminder is\nclass(gapminder) #data frame\n\n[1] \"data.frame\"\n\n\n\nProcessing data\nFiltering the gapminder data set to only contain observations with Africa as the continent as a new data set (africadata).\n\nafricadata = gapminder %&gt;% filter(continent == \"Africa\") #filtering the data to only contain \"Africa\"\nstr(africadata) #data set structure\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata) #data set summary\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\nCreating a new data set from the africadata set to only contain two variables: infant_mortality and life_expectancy.\n\ninflife = africadata %&gt;% select(infant_mortality, life_expectancy) #selecting only 2 variables of interest from the africadata data set\nstr(inflife) #data set structure\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(inflife) #data set summary\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n\nCreating a new data set from the africadata set to only contain two variables: population and life_expectancy.\n\npoplife = africadata %&gt;% select(population, life_expectancy) #selecting only 2 variables of interest from the africadata data set\nstr(poplife) #data set structure\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(poplife) #data set summary\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n\n\n\nPlotting\nPlotting infant mortality vs life expectancy\n\nggplot(inflife, mapping = aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point()\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nPlotting population vs life expectancy\n\nggplot(poplife, mapping = aes(x = log(population), y = life_expectancy)) +\n  geom_point() \n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nI suspect the streaks of data points we are seeing in each plot above are of the same countries over time (years).\n\n\nMore data processing\nBelow, we are figuring out how many NA values there are for each year in the africa data set.\n\nafricadata %&gt;% group_by(year) %&gt;% summarise(sum(is.na(infant_mortality))) #grouping the data set by year then summing the NA values for each year\n\n# A tibble: 57 × 2\n    year `sum(is.na(infant_mortality))`\n   &lt;int&gt;                          &lt;int&gt;\n 1  1960                             10\n 2  1961                             17\n 3  1962                             16\n 4  1963                             16\n 5  1964                             15\n 6  1965                             14\n 7  1966                             13\n 8  1967                             11\n 9  1968                             11\n10  1969                              7\n# ℹ 47 more rows\n\n\n\nafricadata2000 = africadata %&gt;% filter(year == 2000) #filtering africadata for year 2000 only\nstr(africadata2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\n\n\nMore plotting\nPlotting 2000 infant mortality vs life expectancy\n\nggplot(africadata2000, mapping = aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point()\n\n\n\n\n\n\n\n\nPlotting 2000 population vs life expectancy\n\nggplot(africadata2000, mapping = aes(x = log(population), y = life_expectancy)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\nSimple Model Fits\nApplying a linear model to the year 2000 data with life expectancy as the outcome and infant mortality as the predictor.\n\nfit1 = lm(life_expectancy ~ infant_mortality, data = africadata2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n\nApplying a linear model to the year 2000 data with life expectancy as the outcome and population as the predictor.\n\nfit2 = lm(life_expectancy ~ population, data = africadata2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africadata2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\nAssuming a significance value of 0.05, it appears infant mortality is a statistically significant variable when it comes to life expectancy while population size is not.\n\n\nThis section contributed by Tim Harrison.\n\n# Load the death_prob dataset\ndata(death_prob)\n\n# Display help page for death_prob dataset\nhelp(death_prob)\n\n# Get an overview of data structure\nstr(death_prob)\n\n'data.frame':   240 obs. of  3 variables:\n $ age : int  0 1 2 3 4 5 6 7 8 9 ...\n $ sex : Factor w/ 2 levels \"Female\",\"Male\": 2 2 2 2 2 2 2 2 2 2 ...\n $ prob: num  0.006383 0.000453 0.000282 0.00023 0.000169 ...\n\n# Summary of the dataset\nsummary(death_prob)\n\n      age             sex           prob         \n Min.   :  0.00   Female:120   Min.   :0.000091  \n 1st Qu.: 29.75   Male  :120   1st Qu.:0.001318  \n Median : 59.50                Median :0.008412  \n Mean   : 59.50                Mean   :0.127254  \n 3rd Qu.: 89.25                3rd Qu.:0.138332  \n Max.   :119.00                Max.   :0.899639  \n\n# Check the class of the object\nclass(death_prob)\n\n[1] \"data.frame\"\n\n# Histogram of death probabilities\nhist(death_prob$prob, \n     main = \"Distribution of Death Probabilities\",\n     xlab = \"Death Probability\")\n\n\n\n\n\n\n\n#Boxplot of death probabilities by sex\nboxplot(prob ~ sex, data = death_prob,\n        main = \"Death Probabilities by Sex\",\n        xlab = \"Sex\", ylab = \"Death Probability\")\n\n\n\n\n\n\n\n# Optionally, create some tables if relevant\n\ntable(death_prob$sex)\n\n\nFemale   Male \n   120    120 \n\n# Run a simple statistical model (linear regression example)\n\nmodel &lt;- lm(prob ~ age + sex, data = death_prob)\n\n# Print model summary\nsummary(model)\n\n\nCall:\nlm(formula = prob ~ age + sex, data = death_prob)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.17858 -0.12219 -0.02038  0.08905  0.48688 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.1698071  0.0209215  -8.116 2.61e-14 ***\nage          0.0048955  0.0002715  18.035  &lt; 2e-16 ***\nsexMale      0.0115540  0.0188062   0.614     0.54    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1457 on 237 degrees of freedom\nMultiple R-squared:  0.5788,    Adjusted R-squared:  0.5752 \nF-statistic: 162.8 on 2 and 237 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "The data used in this exercise is collected on seasons 1-18 of American Idol. Some of the variables consist of the songs sang by contestants, audition locations and times, personal information about the contestants, and episode ratings. The data and data dictionaries can be found in the following Github repository.\nhttps://github.com/kkakey/American_Idol/tree/main\nRows: 142 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): audition_city, audition_venue, episodes, episode_air_date, callbac...\ndbl  (2): season, tickets_to_hollywood\ndate (4): audition_date_start, audition_date_end, callback_date_start, callb...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 456 Columns: 46\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (44): place, gender, contestant, top_36, top_36_2, top_36_3, top_36_4, t...\ndbl  (1): season\nlgl  (1): comeback\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 190 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Contestant, Birthday, Birthplace, Hometown, Description\ndbl (1): Season\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 593 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (12): episode, airdate, 18_49_rating_share, timeslot_et, dvr_18_49, dvr_...\ndbl  (4): season, show_number, viewers_in_millions, nightlyrank\nlgl  (1): ref\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 18 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): winner, runner_up, original_release, original_network, hosted_by, j...\ndbl (2): season, no_of_episodes\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2429 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): season, week, contestant, song, artist, song_theme, result\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd welcome!\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nFeel free to change this text any way you want 😁!"
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/timothyharrison/Desktop/BrodyJohnson-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 VehColor              0             1   5   6     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean    sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.   16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1  21.2  45  55  70  80  110 ▇▂▃▂▂\n3 WkMiles               0             1 281.  305.   50 132 150 200 1000 ▇▁▁▁▁\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.\n\n#ColorHeight = boxplot(mydata$Height~mydata$VehColor,\n        #main = \"Primary Vehicle Color by Height\",\n        #xlab = \"Vehicle Color\",\n        #ylab = \"Height\")\n\nColorHeight = ggplot(mydata, aes(x = VehColor, y = Height)) +\n  geom_boxplot() +\n  labs(\n    title = \"Primary Vehicle Color by Height\",\n    x = \"Vehicle Color\",\n    y = \"Height\")\n\nplot(ColorHeight)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\", \"results\", \"figures\", \"Vehicle-Color-Height.png\")\nggsave(filename = figure_file, plot = ColorHeight)\n\nSaving 7 x 5 in image\n\n\n\n#plot(mydata$WkMiles~mydata$Weight,\n     #main = \"Weight by Average Weekly Miles\",\n     #xlab = \"Weight\",\n     #ylab = \"Average Weekly Miles\")\n\nWeightMiles = ggplot(mydata, aes(x = Weight, y = WkMiles)) +\n  geom_point() +\n  labs(\n    title = \"Weight by Average Weekly Miles\",\n    x = \"Weight\",\n    y = \"Average Weekly Miles\")\n\nplot(WeightMiles)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\", \"results\", \"figures\", \"Weight-Miles.png\")\nggsave(filename = figure_file, plot = WeightMiles)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/timothyharrison/Desktop/BrodyJohnson-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/timothyharrison/Desktop/BrodyJohnson-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 WkMiles         Miles driven on average in one week   numeric value &gt;0 or NA  \n5 VehColor        Primary vehicle driven color          black/brown/white/silve…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height   &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\"…\n$ Weight   &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender   &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", …\n$ WkMiles  &lt;dbl&gt; 50, 100, 200, 150, 20, 132, 550, 1000, 220, 45, 100, 200, 150…\n$ VehColor &lt;chr&gt; \"brown\", \"black\", \"white\", \"silver\", \"other\", \"other\", \"brown…\n\nsummary(rawdata)\n\n    Height              Weight          Gender             WkMiles      \n Length:14          Min.   :  45.0   Length:14          Min.   :  20.0  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.: 100.0  \n Mode  :character   Median :  70.0   Mode  :character   Median : 150.0  \n                    Mean   : 602.7                      Mean   : 222.6  \n                    3rd Qu.:  90.0                      3rd Qu.: 200.0  \n                    Max.   :7000.0                      Max.   :1000.0  \n                    NA's   :1                                           \n   VehColor        \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender WkMiles VehColor\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;   \n1 180        80 M           50 brown   \n2 175        70 O          100 black   \n3 sixty      60 F          200 white   \n4 178        76 F          150 silver  \n5 192        90 NA          20 other   \n6 6          55 F          132 other   \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nVehColor\n0\n1\n5\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\nWkMiles\n0\n1.00\n222.64\n257.84\n20\n100\n150\n200\n1000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nVehColor\n0\n1\n5\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nWkMiles\n0\n1.00\n224.38\n268.28\n20\n100.00\n150\n200\n1000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nVehColor\n0\n1\n5\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nWkMiles\n0\n1.00\n224.38\n268.28\n20\n100.00\n150\n200\n1000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nVehColor\n0\n1\n5\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nWkMiles\n0\n1\n252.00\n284.20\n20\n116.0\n150\n210\n1000\n▇▁▁▁▁\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nVehColor\n0\n1\n5\n6\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nWkMiles\n0\n1\n252.00\n284.20\n20\n116.0\n150\n210\n1000\n▇▁▁▁▁\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nVehColor\n0\n1\n5\n6\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nWkMiles\n0\n1\n281.33\n305.18\n50\n132\n150\n200\n1000\n▇▁▁▁▁\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata2 &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata2, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Brody Johnson's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Data Exercise",
    "section": "",
    "text": "#Loading and checking data\nInstalling libraries\n\n#Install and load required packages\nlibrary(pdftools)\n\nWarning: package 'pdftools' was built under R version 4.4.1\n\n\nUsing poppler version 23.08.0\n\nlibrary(stringr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(here)\n\nhere() starts at C:/Users/Brody Johnson/Desktop/PracticumII-course/BrodyJohnson-P2-portfolio\n\nlibrary(textdata)\n\nWarning: package 'textdata' was built under R version 4.4.1\n\n\n\n#Reading text from pdf \nptext = pdf_text(\"../data-exercise/Automotive_news_June_2024.pdf\")\n#cat(ptext) #prints all text \n#cat(ptext[1]) #prints first page\n\n\n#general info about the pdf\ninfo = pdf_info(\"../data-exercise/Automotive_news_June_2024.pdf\")\nprint(info) \n\n$version\n[1] \"1.6\"\n\n$pages\n[1] 39\n\n$encrypted\n[1] FALSE\n\n$linearized\n[1] TRUE\n\n$keys\n$keys$Author\n[1] \"btjohnson\"\n\n$keys$Creator\n[1] \"pdftk 2.01 - www.pdftk.com\"\n\n$keys$Producer\n[1] \"Acrobat Distiller 20.0 (Windows)\"\n\n$keys$Title\n[1] \"crain_an_20240624.pdf\"\n\n\n$created\n[1] \"2024-06-24 21:57:30 CDT\"\n\n$modified\n[1] \"2024-06-24 21:57:30 CDT\"\n\n$metadata\n[1] \"&lt;?xpacket begin=\\\"ï»¿\\\" id=\\\"W5M0MpCehiHzreSzNTczkc9d\\\"?&gt;\\n&lt;x:xmpmeta xmlns:x=\\\"adobe:ns:meta/\\\" x:xmptk=\\\"Adobe XMP Core 5.6-c018 91.98c2f96, 2021/06/15-20:39:32        \\\"&gt;\\n   &lt;rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"&gt;\\n      &lt;rdf:Description rdf:about=\\\"\\\"\\n            xmlns:xmp=\\\"http://ns.adobe.com/xap/1.0/\\\"\\n            xmlns:pdf=\\\"http://ns.adobe.com/pdf/1.3/\\\"\\n            xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n            xmlns:xmpMM=\\\"http://ns.adobe.com/xap/1.0/mm/\\\"&gt;\\n         &lt;xmp:CreateDate&gt;2024-06-24T21:57:30-05:00&lt;/xmp:CreateDate&gt;\\n         &lt;xmp:CreatorTool&gt;pdftk 2.01 - www.pdftk.com&lt;/xmp:CreatorTool&gt;\\n         &lt;xmp:ModifyDate&gt;2024-06-24T21:57:30-05:00&lt;/xmp:ModifyDate&gt;\\n         &lt;xmp:MetadataDate&gt;2024-06-24T10:04:55-05:00&lt;/xmp:MetadataDate&gt;\\n         &lt;pdf:Producer&gt;Acrobat Distiller 20.0 (Windows)&lt;/pdf:Producer&gt;\\n         &lt;dc:format&gt;application/pdf&lt;/dc:format&gt;\\n         &lt;dc:title&gt;\\n            &lt;rdf:Alt&gt;\\n               &lt;rdf:li xml:lang=\\\"x-default\\\"&gt;crain_an_20240624.pdf&lt;/rdf:li&gt;\\n            &lt;/rdf:Alt&gt;\\n         &lt;/dc:title&gt;\\n         &lt;dc:creator&gt;\\n            &lt;rdf:Seq&gt;\\n               &lt;rdf:li&gt;btjohnson&lt;/rdf:li&gt;\\n            &lt;/rdf:Seq&gt;\\n         &lt;/dc:creator&gt;\\n         &lt;xmpMM:DocumentID&gt;uuid:8252f421-b4b7-4b08-9ec6-834bd3efe5bb&lt;/xmpMM:DocumentID&gt;\\n         &lt;xmpMM:InstanceID&gt;uuid:67d7ae7b-2ce3-4d2b-89ed-512ecfb40314&lt;/xmpMM:InstanceID&gt;\\n      &lt;/rdf:Description&gt;\\n   &lt;/rdf:RDF&gt;\\n&lt;/x:xmpmeta&gt;\\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                                                                                                    \\n                           \\n&lt;?xpacket end=\\\"w\\\"?&gt;\"\n\n$locked\n[1] FALSE\n\n$attachments\n[1] FALSE\n\n$layout\n[1] \"no_layout\"\n\n\n\n#Storing extracted text\npdflist = unlist(str_extract_all(ptext, \"\\\\S+\")) #unlist removes the lists within the list. Before, each list would represent a different page.  \nhead(pdflist)\n\n[1] \"®\"   \"a\"   \"ut\"  \"on\"  \"ews\" \".c\" \n\n\nOne interesting finding from below is that after all of the “fluff” words, the words “Nissan” and “EV” were among the top 50 most frequented words in this article.\n\nword_freq = as.data.frame(table(pdflist))\nword_freq %&gt;% arrange(desc(Freq)) %&gt;% slice_head(n=50) %&gt;% slice_tail(n=30) # a way to select the middle rows (i.e. first select top 50, then select the bottom 30 of those effectively looking at rows 31-50 of the whole data frame)\n\n    pdflist Freq\n1     said.  142\n2       its  137\n3     Total  137\n4        be  134\n5      will  133\n6       was  129\n7    NISSAN  127\n8        an  125\n9        by  125\n10      has  119\n11     have  112\n12     they  109\n13       EV  108\n14     2024  103\n15    their   97\n16        —   92\n17       he   90\n18        0   89\n19      not   85\n20     than   85\n21     U.S.   84\n22  vehicle   84\n23 vehicles   83\n24  percent   82\n25     this   82\n26   (trk.)   81\n27    about   76\n28    truck   74\n29      car   73\n30      can   70\n\n\nRan the sentiment analysis a handful of times and got scores in the 30’s and 40’s so overall, generally positive article.\n\n#Sentiment Analysis \nbing = tidytext::get_sentiments(\"bing\")\npdflist_sample = sample(pdflist,5000)\n\nbing_sent_score =sapply(pdflist_sample, function(t) {\n  ifelse(t %in% bing$word[bing$sentiment==\"positive\"], 1, ifelse(t %in% bing$word[bing$sentiment==\"negative\"], -1, 0))\n})\nhead(bing_sent_score, n=10) \n\n         value communication,    interrupted             63            one \n             0              0              0              0              0 \n         8,288            140          Ipsos          Mazda        $15,364 \n             0              0              0              0              0 \n\nbing_total_sent = sum(bing_sent_score)\nprint(bing_total_sent)\n\n[1] 43"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "cdcdata-exercise",
    "section": "",
    "text": "The data set selected for this exercise consists of the counts of deaths occurred by state and cause of death in the years of 2020 to 2023. The causes of death consist of diabetes, Alzheimer’s, various respiratory diseases, and more. The data set was downloaded from the CDC website linked below.\nhttps://data.cdc.gov/NCHS/Weekly-Provisional-Counts-of-Deaths-by-State-and-S/muzy-jte6/about_data\nBelow, I am loading the libraries needed for this exercise and setting the seed so it is easy to reproduce results.\n\nset.seed(200)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\nReading the data set (csv file) into R. The raw data set is starting with 35 columns and 10,476 rows of data.\n\nUS_deaths = read.csv(\"Weekly_Provisional_Counts_of_Deaths_by_State_and_Select_Causes__2020-2023_20240702.csv\", header=TRUE)\ndplyr::glimpse(US_deaths)\n\nRows: 10,476\nColumns: 35\n$ Data.As.Of                                                                                        &lt;chr&gt; …\n$ Jurisdiction.of.Occurrence                                                                        &lt;chr&gt; …\n$ MMWR.Year                                                                                         &lt;int&gt; …\n$ MMWR.Week                                                                                         &lt;int&gt; …\n$ Week.Ending.Date                                                                                  &lt;chr&gt; …\n$ All.Cause                                                                                         &lt;int&gt; …\n$ Natural.Cause                                                                                     &lt;int&gt; …\n$ Septicemia..A40.A41.                                                                              &lt;int&gt; …\n$ Malignant.neoplasms..C00.C97.                                                                     &lt;int&gt; …\n$ Diabetes.mellitus..E10.E14.                                                                       &lt;int&gt; …\n$ Alzheimer.disease..G30.                                                                           &lt;int&gt; …\n$ Influenza.and.pneumonia..J09.J18.                                                                 &lt;int&gt; …\n$ Chronic.lower.respiratory.diseases..J40.J47.                                                      &lt;int&gt; …\n$ Other.diseases.of.respiratory.system..J00.J06.J30.J39.J67.J70.J98.                                &lt;int&gt; …\n$ Nephritis..nephrotic.syndrome.and.nephrosis..N00.N07.N17.N19.N25.N27.                             &lt;int&gt; …\n$ Symptoms..signs.and.abnormal.clinical.and.laboratory.findings..not.elsewhere.classified..R00.R99. &lt;int&gt; …\n$ Diseases.of.heart..I00.I09.I11.I13.I20.I51.                                                       &lt;int&gt; …\n$ Cerebrovascular.diseases..I60.I69.                                                                &lt;int&gt; …\n$ COVID.19..U071..Multiple.Cause.of.Death.                                                          &lt;int&gt; …\n$ COVID.19..U071..Underlying.Cause.of.Death.                                                        &lt;int&gt; …\n$ flag_allcause                                                                                     &lt;lgl&gt; …\n$ flag_natcause                                                                                     &lt;lgl&gt; …\n$ flag_sept                                                                                         &lt;chr&gt; …\n$ flag_neopl                                                                                        &lt;chr&gt; …\n$ flag_diab                                                                                         &lt;chr&gt; …\n$ flag_alz                                                                                          &lt;chr&gt; …\n$ flag_inflpn                                                                                       &lt;chr&gt; …\n$ flag_clrd                                                                                         &lt;chr&gt; …\n$ flag_otherresp                                                                                    &lt;chr&gt; …\n$ flag_nephr                                                                                        &lt;chr&gt; …\n$ flag_otherunk                                                                                     &lt;chr&gt; …\n$ flag_hd                                                                                           &lt;chr&gt; …\n$ flag_stroke                                                                                       &lt;chr&gt; …\n$ flag_cov19mcod                                                                                    &lt;chr&gt; …\n$ flag_cov19ucod                                                                                    &lt;chr&gt; …\n\n\nAfter taking a glimpse at the data, it is noticed the last several columns are variables acting as “flags” that would not offer much in terms of data analysis so first these are removed.\n\nUS_deaths = US_deaths[,1:20]\nsummary(US_deaths)\n\n  Data.As.Of        Jurisdiction.of.Occurrence   MMWR.Year      MMWR.Week    \n Length:10476       Length:10476               Min.   :2020   Min.   : 1.00  \n Class :character   Class :character           1st Qu.:2020   1st Qu.:13.00  \n Mode  :character   Mode  :character           Median :2021   Median :25.00  \n                                               Mean   :2021   Mean   :25.21  \n                                               3rd Qu.:2022   3rd Qu.:37.00  \n                                               Max.   :2023   Max.   :53.00  \n                                                                             \n Week.Ending.Date     All.Cause       Natural.Cause   Septicemia..A40.A41.\n Length:10476       Min.   :   12.0   Min.   :   12   Min.   :  0.00      \n Class :character   1st Qu.:  366.8   1st Qu.:  331   1st Qu.: 13.00      \n Mode  :character   Median :  931.5   Median :  837   Median : 20.00      \n                    Mean   : 2362.3   Mean   : 2152   Mean   : 47.76      \n                    3rd Qu.: 1548.0   3rd Qu.: 1405   3rd Qu.: 33.00      \n                    Max.   :87415.0   Max.   :81622   Max.   :993.00      \n                                                      NA's   :4393        \n Malignant.neoplasms..C00.C97. Diabetes.mellitus..E10.E14.\n Min.   :   10.0               Min.   :   0.00            \n 1st Qu.:   66.0               1st Qu.:  22.00            \n Median :  171.0               Median :  34.00            \n Mean   :  431.9               Mean   :  90.65            \n 3rd Qu.:  282.0               3rd Qu.:  57.00            \n Max.   :12284.0               Max.   :2601.00            \n NA's   :10                    NA's   :2242               \n Alzheimer.disease..G30. Influenza.and.pneumonia..J09.J18.\n Min.   :   0.0          Min.   :   0.00                  \n 1st Qu.:  21.0          1st Qu.:  13.00                  \n Median :  40.0          Median :  20.00                  \n Mean   : 103.9          Mean   :  53.17                  \n 3rd Qu.:  65.0          3rd Qu.:  34.00                  \n Max.   :3075.0          Max.   :1916.00                  \n NA's   :1744            NA's   :4235                     \n Chronic.lower.respiratory.diseases..J40.J47.\n Min.   :   0.0                              \n 1st Qu.:  27.0                              \n Median :  48.0                              \n Mean   : 121.2                              \n 3rd Qu.:  83.0                              \n Max.   :3708.0                              \n NA's   :1511                                \n Other.diseases.of.respiratory.system..J00.J06.J30.J39.J67.J70.J98.\n Min.   :   0.00                                                   \n 1st Qu.:  14.00                                                   \n Median :  21.00                                                   \n Mean   :  52.64                                                   \n 3rd Qu.:  37.00                                                   \n Max.   :1135.00                                                   \n NA's   :4171                                                      \n Nephritis..nephrotic.syndrome.and.nephrosis..N00.N07.N17.N19.N25.N27.\n Min.   :   0.00                                                      \n 1st Qu.:  14.00                                                      \n Median :  23.00                                                      \n Mean   :  58.75                                                      \n 3rd Qu.:  40.00                                                      \n Max.   :1349.00                                                      \n NA's   :3760                                                         \n Symptoms..signs.and.abnormal.clinical.and.laboratory.findings..not.elsewhere.classified..R00.R99.\n Min.   :   0.00                                                                                  \n 1st Qu.:  12.00                                                                                  \n Median :  19.00                                                                                  \n Mean   :  53.78                                                                                  \n 3rd Qu.:  33.00                                                                                  \n Max.   :3541.00                                                                                  \n NA's   :4663                                                                                     \n Diseases.of.heart..I00.I09.I11.I13.I20.I51. Cerebrovascular.diseases..I60.I69.\n Min.   :   10.0                             Min.   :   0.0                    \n 1st Qu.:   72.0                             1st Qu.:  25.0                    \n Median :  190.0                             Median :  48.0                    \n Mean   :  493.5                             Mean   : 133.1                    \n 3rd Qu.:  329.0                             3rd Qu.:  80.0                    \n Max.   :16538.0                             Max.   :3833.0                    \n NA's   :12                                  NA's   :1445                      \n COVID.19..U071..Multiple.Cause.of.Death.\n Min.   :    0.0                         \n 1st Qu.:   22.0                         \n Median :   53.0                         \n Mean   :  262.6                         \n 3rd Qu.:  139.0                         \n Max.   :26028.0                         \n NA's   :1755                            \n COVID.19..U071..Underlying.Cause.of.Death.\n Min.   :    0.0                           \n 1st Qu.:   19.0                           \n Median :   45.0                           \n Mean   :  241.4                           \n 3rd Qu.:  128.0                           \n Max.   :23954.0                           \n NA's   :2296                              \n\n\nFor the sake of looking at a categorical variable, we can look at the distribution of natural cause deaths by state. The bar plot is quite busy with all of the states so this was narrowed down to the top 10.\n\nresult = US_deaths %&gt;% \n  group_by(State = as.factor(Jurisdiction.of.Occurrence)) %&gt;% \n  summarize(Total = sum(Natural.Cause)) %&gt;% \n  arrange(desc(Total)) %&gt;% \n  filter(State != \"United States\") %&gt;% \n  top_n(10, wt = Total)\n\nggplot(result, aes(x=State, y=Total))+\n    geom_bar(stat = \"identity\", fill = \"skyblue\")\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, I’m going to focus on the state of Texas. For one, it reduces the scope that will be analyzed but second, it also drastically reduced the missing values to only the COVID-19 related parameters.\n\nTX_deaths = US_deaths %&gt;%  filter(Jurisdiction.of.Occurrence == \"Texas\")\nsummary(TX_deaths)\n\n  Data.As.Of        Jurisdiction.of.Occurrence   MMWR.Year      MMWR.Week    \n Length:194         Length:194                 Min.   :2020   Min.   : 1.00  \n Class :character   Class :character           1st Qu.:2020   1st Qu.:13.00  \n Mode  :character   Mode  :character           Median :2021   Median :25.00  \n                                               Mean   :2021   Mean   :25.21  \n                                               3rd Qu.:2022   3rd Qu.:37.00  \n                                               Max.   :2023   Max.   :53.00  \n                                                                             \n Week.Ending.Date     All.Cause    Natural.Cause  Septicemia..A40.A41.\n Length:194         Min.   :2489   Min.   :2489   Min.   :46.00       \n Class :character   1st Qu.:4297   1st Qu.:3884   1st Qu.:61.25       \n Mode  :character   Median :4528   Median :4100   Median :68.00       \n                    Mean   :4807   Mean   :4396   Mean   :68.45       \n                    3rd Qu.:5035   3rd Qu.:4613   3rd Qu.:74.00       \n                    Max.   :7208   Max.   :6796   Max.   :93.00       \n                                                                      \n Malignant.neoplasms..C00.C97. Diabetes.mellitus..E10.E14.\n Min.   :574.0                 Min.   : 79.0              \n 1st Qu.:809.2                 1st Qu.:138.0              \n Median :835.0                 Median :150.0              \n Mean   :832.6                 Mean   :151.9              \n 3rd Qu.:859.0                 3rd Qu.:165.0              \n Max.   :913.0                 Max.   :248.0              \n                                                          \n Alzheimer.disease..G30. Influenza.and.pneumonia..J09.J18.\n Min.   :141.0           Min.   : 22.00                   \n 1st Qu.:183.2           1st Qu.: 47.25                   \n Median :200.0           Median : 56.00                   \n Mean   :206.3           Mean   : 60.54                   \n 3rd Qu.:222.8           3rd Qu.: 68.00                   \n Max.   :312.0           Max.   :121.00                   \n                                                          \n Chronic.lower.respiratory.diseases..J40.J47.\n Min.   :116.0                               \n 1st Qu.:178.2                               \n Median :193.0                               \n Mean   :194.7                               \n 3rd Qu.:207.8                               \n Max.   :267.0                               \n                                             \n Other.diseases.of.respiratory.system..J00.J06.J30.J39.J67.J70.J98.\n Min.   : 41.00                                                    \n 1st Qu.: 56.00                                                    \n Median : 64.50                                                    \n Mean   : 65.29                                                    \n 3rd Qu.: 73.75                                                    \n Max.   :101.00                                                    \n                                                                   \n Nephritis..nephrotic.syndrome.and.nephrosis..N00.N07.N17.N19.N25.N27.\n Min.   : 46.0                                                        \n 1st Qu.: 81.0                                                        \n Median : 88.5                                                        \n Mean   : 88.9                                                        \n 3rd Qu.: 96.0                                                        \n Max.   :125.0                                                        \n                                                                      \n Symptoms..signs.and.abnormal.clinical.and.laboratory.findings..not.elsewhere.classified..R00.R99.\n Min.   : 16.00                                                                                   \n 1st Qu.: 38.00                                                                                   \n Median : 46.00                                                                                   \n Mean   : 59.38                                                                                   \n 3rd Qu.: 56.75                                                                                   \n Max.   :340.00                                                                                   \n                                                                                                  \n Diseases.of.heart..I00.I09.I11.I13.I20.I51. Cerebrovascular.diseases..I60.I69.\n Min.   : 498.0                              Min.   :127.0                     \n 1st Qu.: 913.8                              1st Qu.:218.0                     \n Median : 960.0                              Median :230.5                     \n Mean   : 968.1                              Mean   :231.7                     \n 3rd Qu.:1014.5                              3rd Qu.:243.0                     \n Max.   :1271.0                              Max.   :302.0                     \n                                                                               \n COVID.19..U071..Multiple.Cause.of.Death.\n Min.   :   0.00                         \n 1st Qu.:  92.75                         \n Median : 239.00                         \n Mean   : 543.73                         \n 3rd Qu.: 729.25                         \n Max.   :2561.00                         \n NA's   :2                               \n COVID.19..U071..Underlying.Cause.of.Death.\n Min.   :   0.0                            \n 1st Qu.:  63.5                            \n Median : 206.0                            \n Mean   : 492.2                            \n 3rd Qu.: 657.0                            \n Max.   :2413.0                            \n NA's   :3                                 \n\n\nBelow are three plots, each depicting the number of deaths caused by natural causes, Alzheimer disease, and chronic lower respiratory diseases respectively.\nIn the natural cause plot, we see definitive spikes in deaths in mid-2020, late 2020, Fall of 2021, and early 2022. This is interesting because it does not seem like there is a particular time of year these spikes are ocurring and then the spikes are almost nonexistent in 2023.\n\nggplot(TX_deaths, aes(x = Week.Ending.Date, y = Natural.Cause))+\n  geom_bar(stat= \"identity\")\n\n\n\n\n\n\n\n\nThe Alzheimer disease plot below is more stable than the natural cause plot above. It appears the deaths started to drop off in the Spring of 2021 with a couple of spikes in 2022 and 2023.\n\nggplot(TX_deaths, aes(x = Week.Ending.Date, y = Alzheimer.disease..G30.))+\n  geom_bar(stat= \"identity\")\n\n\n\n\n\n\n\n\nDeaths due to respiratory disease (below) is something more of what I would expect in a time series data set with increases and decreases with the seasons.\n\nggplot(TX_deaths, aes(x = Week.Ending.Date, y = Chronic.lower.respiratory.diseases..J40.J47.))+\n  geom_bar(stat= \"identity\")\n\n\n\n\n\n\n\n\nThis Section Contributed by Vinayak Revisanker\n\n# # Display summary of the synthetic data\n# summary(synthetic_data)\n# \n# # Plotting the synthetic number of deaths by Diabetes in Texas\n# ggplot(synthetic_data, aes(x = as.Date(Week.Ending.Date), y = Diabetes.mellitus..E10.E14.)) +\n#   geom_line() +\n#   labs(title = \"Synthetic Diabetic Deaths in Texas\", x = \"Week Ending Date\", y = \"Number of Deaths\")\n\n\n# # Display summary of the synthetic data\n# summary(synthetic_data)\n# \n# # Plotting the synthetic number of deaths by Influenza and pneumonia disease in Texas\n# ggplot(synthetic_data, aes(x = as.Date(Week.Ending.Date), y = Influenza.and.pneumonia..J09.J18.)) +\n#   geom_line() +\n#   labs(title = \"Influenza and pneumonia Disease Deaths in Texas\", x = \"Week Ending Date\", y = \"Number of Deaths\")\n\n\n# # Display summary of the synthetic data\n# summary(synthetic_data)\n# \n# # Plotting the synthetic number of deaths by Septicemia diseases in Texas\n# ggplot(synthetic_data, aes(x = as.Date(Week.Ending.Date), y = Septicemia..A40.A41.)) +\n#   geom_line() +\n#   labs(title = \"Septicemia Disease Deaths in Texas\", x = \"Week Ending Date\", y = \"Number of Deaths\")"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#basic-regression-trees",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#basic-regression-trees",
    "title": "Tidy Tuesday Exercise",
    "section": "Basic Regression Trees",
    "text": "Basic Regression Trees\n\n### Basic Regression Trees\n\nlibrary(rpart)\nlibrary(caret)\n\ncartTune &lt;- train(x = data_train_X, y = data_train_Y,\n                  method = \"rpart\",\n                  tuneLength = 25,\n                  trControl = trainControl())\n\nWarning in nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,\n: There were missing values in resampled performance measures.\n\ncartTune\n\nCART \n\n443 samples\n  7 predictor\n\nNo pre-processing\nResampling: Bootstrapped (25 reps) \nSummary of sample sizes: 443, 443, 443, 443, 443, 443, ... \nResampling results across tuning parameters:\n\n  cp            RMSE      Rsquared   MAE     \n  0.0005100729  2.497360  0.8879163  1.773545\n  0.0005278596  2.497361  0.8879250  1.773738\n  0.0005388546  2.497423  0.8879017  1.773138\n  0.0007415362  2.507226  0.8870055  1.776976\n  0.0009517350  2.529561  0.8850426  1.796262\n  0.0014853540  2.569109  0.8813531  1.832734\n  0.0016051245  2.580862  0.8802370  1.843328\n  0.0017222547  2.584266  0.8797963  1.848556\n  0.0017835793  2.586622  0.8795778  1.851393\n  0.0019764499  2.591123  0.8791102  1.858724\n  0.0020609707  2.599958  0.8782272  1.863031\n  0.0025681099  2.634449  0.8749495  1.892478\n  0.0026706517  2.634803  0.8749628  1.896125\n  0.0037087826  2.671726  0.8716804  1.936909\n  0.0058125664  2.775554  0.8616984  2.015925\n  0.0077559620  2.928510  0.8454427  2.169431\n  0.0079437337  2.939347  0.8443099  2.182288\n  0.0092682364  2.980522  0.8400427  2.220443\n  0.0101566997  3.015720  0.8363776  2.255996\n  0.0162114932  3.160332  0.8205060  2.349857\n  0.0188498388  3.185020  0.8176680  2.372433\n  0.0385974283  3.628059  0.7621480  2.774535\n  0.0477649514  3.895348  0.7262153  3.069338\n  0.1181491965  4.435499  0.6398625  3.505873\n  0.5987196063  6.107393  0.5739727  4.926905\n\nRMSE was used to select the optimal model using the smallest value.\nThe final value used for the model was cp = 0.0005100729.\n\ncartTune$finalModel\n\nn= 443 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n   1) root 443 24671.880000 20.607440  \n     2) airdate&gt;=15385.5 114  1546.513000 10.797720  \n       4) judges=Harry Connick Jr.; Jennifer Lopez; Keith Urban,Katy Perry; Luke Bryan; Lionel Richie 63   121.925800  7.904921  \n         8) airdate&gt;=17605.5 41    31.608690  7.246829 *\n         9) airdate&lt; 17605.5 22    39.469060  9.131364  \n          18) weekrank&gt;=7.5 9     6.616200  8.206667 *\n          19) weekrank&lt; 7.5 13    19.829570  9.771538 *\n       5) judges=Randy Jackson; Jennifer Lopez; Steven Tyler,Randy Jackson; Mariah Carey; Nicki Minaj; Keith Urban 51   246.136300 14.371180  \n        10) airdate&gt;=15732.5 27    22.309360 12.522960 *\n        11) airdate&lt; 15732.5 24    27.840100 16.450420 *\n     3) airdate&lt; 15385.5 329  8353.830000 24.006550  \n       6) airdate&lt; 11930 16    73.834780 10.841250 *\n       7) airdate&gt;=11930 313  5365.032000 24.679540  \n        14) airdate&gt;=14664 68   358.837200 21.446590  \n          28) weekrank&gt;=1.5 56   212.267000 20.909610  \n            56) season&gt;=10.5 7     3.791371 18.564290 *\n            57) season&lt; 10.5 49   164.471300 21.244650  \n             114) show_number&gt;=14.5 38    98.380590 20.743630 *\n             115) show_number&lt; 14.5 11    23.599470 22.975450 *\n          29) weekrank&lt; 1.5 12    55.067620 23.952500 *\n        15) airdate&lt; 14664 245  4098.197000 25.576840  \n          30) airdate&lt; 12562 66  1315.502000 22.255450  \n            60) weekrank&gt;=7.5 12   119.846700 17.033330 *\n            61) weekrank&lt; 7.5 54   795.687300 23.415930  \n             122) show_number&gt;=11.5 40   476.768100 22.141500  \n               244) airdate&lt; 12175 16    33.774900 19.822500 *\n               245) airdate&gt;=12175 24   299.586200 23.687500  \n                 490) weekrank&gt;=2.5 14    47.877140 22.314290 *\n                 491) weekrank&lt; 2.5 10   188.349000 25.610000 *\n             123) show_number&lt; 11.5 14    68.334290 27.057140 *\n          31) airdate&gt;=12562 179  1786.150000 26.801490  \n            62) airdate&gt;=13953.5 58   324.823200 24.473360  \n             124) show_number&gt;=10.5 42   193.781700 23.907430  \n               248) weekrank&gt;=1.5 23    75.132840 23.024870 *\n               249) weekrank&lt; 1.5 19    79.047390 24.975790 *\n             125) show_number&lt; 10.5 16    82.278780 25.958940 *\n            63) airdate&lt; 13953.5 121   996.265700 27.917450  \n             126) show_number&gt;=7.5 98   578.679400 27.251480  \n               252) weekrank&gt;=2.5 28   135.299000 25.042070  \n                 504) show_number&gt;=21 11    47.317450 23.903640 *\n                 505) show_number&lt; 21 17    64.500500 25.778710 *\n               253) weekrank&lt; 2.5 70   252.026200 28.135240  \n                 506) weekrank&gt;=1.5 39   111.649800 27.270260  \n                  1012) show_number&gt;=19.5 23    62.125410 26.699000 *\n                  1013) show_number&lt; 19.5 16    31.229340 28.091440 *\n                 507) weekrank&lt; 1.5 31    74.486330 29.223450  \n                  1014) show_number&gt;=25 16    20.105090 28.589380 *\n                  1015) show_number&lt; 25 15    41.086680 29.899800 *\n             127) show_number&lt; 7.5 23   188.921400 30.755090  \n               254) season&gt;=6.5 7    38.639530 28.846710 *\n               255) season&lt; 6.5 16   113.635400 31.590000 *\n\n### Plot the tuning results\n### Cross-validated RMSE profile for the regression tree\nplot(cartTune, scales = list(x = list(log = 10)))\n\n\n\n\n\n\n\n### Use the partykit package to make some nice plots. First, convert\n### the rpart objects to party objects.\n# install.packages('partykit')\nlibrary(partykit)\n\nWarning: package 'partykit' was built under R version 4.4.1\n\n\nLoading required package: grid\n\n\nLoading required package: libcoin\n\n\nWarning: package 'libcoin' was built under R version 4.4.1\n\n\nLoading required package: mvtnorm\n\ncartTree &lt;- as.party(cartTune$finalModel)\nplot(cartTree)\n\n\n\n\n\n\n\n### Get the variable importance. 'competes' is an argument that\n### controls whether splits not used in the tree should be included\n### in the importance calculations.\n\ncartImp &lt;- varImp(cartTune, scale = FALSE, competes = FALSE)\ncartImp\n\nrpart variable importance\n\n                 Overall\nairdate           3.1345\nweekrank          1.8970\nshow_number       1.4688\njudges            0.7620\nseason            0.4013\nhosted_by         0.0000\noriginal_network  0.0000\n\nplot(cartImp,20)\n\n\n\n\n\n\n\n### Save the test set results in a data frame                 \ntestResults &lt;- data.frame(obs = data_test_Y,\n                          CART = predict(cartTune, data_test_X))"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#random-forest",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#random-forest",
    "title": "Tidy Tuesday Exercise",
    "section": "Random Forest",
    "text": "Random Forest\n\nmtryGrid &lt;- data.frame(mtry = floor(seq(10, ncol(data_train_X), length = 10)))\n\nset.seed(100)\nrfTune &lt;- train(x = data_train_X, y = data_train_Y,\n                method = \"rf\",\n                tuneGrid = mtryGrid,\n                ntree = 200,\n                importance = TRUE,\n                trControl = trainControl())\n\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\nWarning in randomForest.default(x, y, mtry = param$mtry, ...): invalid mtry:\nreset to within valid range\n\nrfTune\n\nRandom Forest \n\n443 samples\n  7 predictor\n\nNo pre-processing\nResampling: Bootstrapped (25 reps) \nSummary of sample sizes: 443, 443, 443, 443, 443, 443, ... \nResampling results across tuning parameters:\n\n  mtry  RMSE      Rsquared   MAE     \n   7    1.981668  0.9289569  1.359626\n   8    1.977921  0.9292266  1.355269\n   9    1.982473  0.9287980  1.359853\n  10    1.981318  0.9289535  1.357685\n\nRMSE was used to select the optimal model using the smallest value.\nThe final value used for the model was mtry = 8.\n\nplot(rfTune)\n\n\n\n\n\n\n\nrfImp &lt;- varImp(rfTune, scale = FALSE) #variable importance \nrfImp\n\nrf variable importance\n\n                 Overall\nairdate           89.939\nshow_number       35.124\nweekrank          26.836\nseason            12.085\njudges             5.334\nhosted_by          3.054\noriginal_network   1.140\n\n### Save the test set results in a data frame  \ntestResults$RF &lt;- predict(rfTune, data_test_X)"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#boosting",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#boosting",
    "title": "Tidy Tuesday Exercise",
    "section": "Boosting",
    "text": "Boosting\n\n### Boosting\n\ngbmGrid = expand.grid( interaction.depth = seq( 1, 7, by=2 ), #d value\n                       n.trees = seq( 100, 1000, by=100 ), #k value or number of trees\n                       shrinkage = c(0.01, 0.1), #lambda\n                       n.minobsinnode = 10 )\n\ngbmTune &lt;- train(x = data_train_X, y = data_train_Y,\n                 method = \"gbm\",\n                 tuneGrid = gbmGrid,\n                 trControl = trainControl(),\n                 verbose = FALSE)\ngbmTune\n\nStochastic Gradient Boosting \n\n443 samples\n  7 predictor\n\nNo pre-processing\nResampling: Bootstrapped (25 reps) \nSummary of sample sizes: 443, 443, 443, 443, 443, 443, ... \nResampling results across tuning parameters:\n\n  shrinkage  interaction.depth  n.trees  RMSE      Rsquared   MAE     \n  0.01       1                   100     5.028915  0.6832350  4.006474\n  0.01       1                   200     4.190618  0.7626742  3.267249\n  0.01       1                   300     3.675353  0.8082361  2.820118\n  0.01       1                   400     3.338230  0.8344587  2.525687\n  0.01       1                   500     3.103792  0.8510074  2.316264\n  0.01       1                   600     2.929796  0.8629325  2.161468\n  0.01       1                   700     2.796879  0.8721401  2.047769\n  0.01       1                   800     2.692578  0.8789965  1.959156\n  0.01       1                   900     2.607573  0.8845855  1.887776\n  0.01       1                  1000     2.541332  0.8889343  1.833572\n  0.01       3                   100     4.068294  0.8506192  3.235386\n  0.01       3                   200     2.917299  0.8832554  2.198798\n  0.01       3                   300     2.466938  0.9022502  1.779443\n  0.01       3                   400     2.248534  0.9133520  1.585017\n  0.01       3                   500     2.128807  0.9199339  1.484756\n  0.01       3                   600     2.058221  0.9240967  1.430441\n  0.01       3                   700     2.013870  0.9268931  1.401267\n  0.01       3                   800     1.984450  0.9287463  1.381722\n  0.01       3                   900     1.961514  0.9302536  1.368330\n  0.01       3                  1000     1.944543  0.9313861  1.358321\n  0.01       5                   100     3.766655  0.8885996  3.010036\n  0.01       5                   200     2.571744  0.9093066  1.927318\n  0.01       5                   300     2.187239  0.9199617  1.554424\n  0.01       5                   400     2.040048  0.9263029  1.421186\n  0.01       5                   500     1.974046  0.9298779  1.369133\n  0.01       5                   600     1.937221  0.9320955  1.344188\n  0.01       5                   700     1.915818  0.9334157  1.330335\n  0.01       5                   800     1.900085  0.9344339  1.321978\n  0.01       5                   900     1.890075  0.9350827  1.317113\n  0.01       5                  1000     1.882690  0.9355818  1.313325\n  0.01       7                   100     3.648678  0.9004637  2.926723\n  0.01       7                   200     2.453542  0.9161475  1.831614\n  0.01       7                   300     2.111410  0.9239203  1.493249\n  0.01       7                   400     1.994802  0.9287799  1.384618\n  0.01       7                   500     1.946639  0.9314402  1.347608\n  0.01       7                   600     1.919476  0.9331027  1.330429\n  0.01       7                   700     1.903333  0.9341577  1.322194\n  0.01       7                   800     1.891530  0.9349278  1.315948\n  0.01       7                   900     1.884329  0.9354191  1.312475\n  0.01       7                  1000     1.877686  0.9358809  1.309169\n  0.10       1                   100     2.546812  0.8878098  1.847226\n  0.10       1                   200     2.297418  0.9046876  1.649313\n  0.10       1                   300     2.223746  0.9104724  1.597192\n  0.10       1                   400     2.191593  0.9131222  1.578841\n  0.10       1                   500     2.167307  0.9149833  1.564447\n  0.10       1                   600     2.151083  0.9161424  1.552549\n  0.10       1                   700     2.142410  0.9169615  1.549935\n  0.10       1                   800     2.132055  0.9177070  1.542696\n  0.10       1                   900     2.127963  0.9181160  1.540147\n  0.10       1                  1000     2.120849  0.9187411  1.536172\n  0.10       3                   100     1.978604  0.9290750  1.390394\n  0.10       3                   200     1.913548  0.9335267  1.355508\n  0.10       3                   300     1.895040  0.9349056  1.344954\n  0.10       3                   400     1.887291  0.9355631  1.340807\n  0.10       3                   500     1.882618  0.9358879  1.340626\n  0.10       3                   600     1.880893  0.9361005  1.340641\n  0.10       3                   700     1.881955  0.9359814  1.341425\n  0.10       3                   800     1.882650  0.9359687  1.342233\n  0.10       3                   900     1.885009  0.9358598  1.344019\n  0.10       3                  1000     1.888089  0.9356716  1.346931\n  0.10       5                   100     1.911079  0.9335562  1.340354\n  0.10       5                   200     1.881000  0.9356717  1.324087\n  0.10       5                   300     1.879636  0.9359072  1.324187\n  0.10       5                   400     1.882854  0.9357959  1.327506\n  0.10       5                   500     1.882792  0.9358071  1.328886\n  0.10       5                   600     1.887146  0.9355986  1.332296\n  0.10       5                   700     1.890753  0.9354505  1.336376\n  0.10       5                   800     1.895406  0.9351445  1.341254\n  0.10       5                   900     1.899517  0.9349374  1.346058\n  0.10       5                  1000     1.902558  0.9347688  1.346891\n  0.10       7                   100     1.922149  0.9329502  1.343622\n  0.10       7                   200     1.895896  0.9348448  1.329423\n  0.10       7                   300     1.889283  0.9354276  1.325189\n  0.10       7                   400     1.895017  0.9350989  1.330653\n  0.10       7                   500     1.898109  0.9349321  1.334504\n  0.10       7                   600     1.902555  0.9347101  1.339771\n  0.10       7                   700     1.910778  0.9341824  1.346924\n  0.10       7                   800     1.916777  0.9337963  1.351791\n  0.10       7                   900     1.918942  0.9336778  1.353412\n  0.10       7                  1000     1.923001  0.9334474  1.358148\n\nTuning parameter 'n.minobsinnode' was held constant at a value of 10\nRMSE was used to select the optimal model using the smallest value.\nThe final values used for the model were n.trees = 1000, interaction.depth =\n 7, shrinkage = 0.01 and n.minobsinnode = 10.\n\nplot(gbmTune, auto.key = list(columns = 4, lines = TRUE))\n\n\n\n\n\n\n\n### Save the test set results in a data frame  \ntestResults$Boosting &lt;- predict(gbmTune, data_test_X)"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#auditions-data-set",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#auditions-data-set",
    "title": "Tidy Tuesday Exercise",
    "section": "Auditions Data set",
    "text": "Auditions Data set\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ndplyr::glimpse(auditions) #Need to convert episodes to numeric with NAs \n\nRows: 142\nColumns: 12\n$ season               &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3…\n$ audition_date_start  &lt;date&gt; 2002-04-20, 2002-04-23, 2002-04-26, 2002-04-29, …\n$ audition_date_end    &lt;date&gt; 2002-04-22, 2002-04-25, 2002-04-28, 2002-05-01, …\n$ audition_city        &lt;chr&gt; \"Los Angeles, California\", \"Seattle, Washington\",…\n$ audition_venue       &lt;chr&gt; \"Westin Bonaventure Hotel\", \"Hyatt Regency Hotel\"…\n$ episodes             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ episode_air_date     &lt;chr&gt; \"11-Jun-02\", \"11-Jun-02\", \"11-Jun-02\", \"11-Jun-02…\n$ callback_venue       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, \"Atheneum Suites Hote…\n$ callback_date_start  &lt;date&gt; NA, NA, NA, NA, 2002-03-05, 2002-05-07, 2002-05-…\n$ callback_date_end    &lt;date&gt; NA, NA, NA, NA, 2002-03-05, 2002-05-07, 2002-05-…\n$ tickets_to_hollywood &lt;dbl&gt; 31, 10, 23, 25, 15, 11, 6, 22, 35, 46, 30, 20, 36…\n$ guest_judge          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n#Also need to convert air date to date instead of character \n#May not be needed because of missing values however. \n\n\ncolSums(is.na(auditions)) #Episodes, air_date, callback_venue, and gust_judge have significant number of missing values\n\n              season  audition_date_start    audition_date_end \n                   0                    0                    0 \n       audition_city       audition_venue             episodes \n                   0                    0                  126 \n    episode_air_date       callback_venue  callback_date_start \n                  42                   43                   13 \n   callback_date_end tickets_to_hollywood          guest_judge \n                  13                   48                  133"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#eliminations-data-set",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#eliminations-data-set",
    "title": "Tidy Tuesday Exercise",
    "section": "Eliminations Data set",
    "text": "Eliminations Data set\n\ndplyr::glimpse(eliminations)  \n\nRows: 456\nColumns: 46\n$ season     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ place      &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9–10\", \"9–10\", \"11…\n$ gender     &lt;chr&gt; \"Female\", \"Male\", \"Female\", \"Female\", \"Male\", \"Female\", \"Fe…\n$ contestant &lt;chr&gt; \"Kelly Clarkson\", \"Justin Guarini\", \"Nikki McKibbin\", \"Tamy…\n$ top_36     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_36_2   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_36_3   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_36_4   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_32     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_32_2   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_32_3   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_32_4   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_30     &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"Safe (1st)\", \"N/A\", \"N/A\", \"Safe (2nd…\n$ top_30_2   &lt;chr&gt; \"Safe (2nd)\", \"Safe (1st)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/…\n$ top_30_3   &lt;chr&gt; \"N/A\", \"N/A\", \"Safe (2nd)\", \"N/A\", \"Wild Card\", \"Safe (1st)…\n$ top_25     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_25_2   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_25_3   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_24     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_24_2   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_24_3   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_20     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_20_2   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_16     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_14     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_13     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_12     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_11     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_11_2   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ wildcard   &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"Saved\", \"N/A\", \"N/A\", \"N/A\", \"…\n$ comeback   &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_10     &lt;chr&gt; \"Safe\", \"Safe\", \"Bottom Three\", \"Safe\", \"Safe\", \"Safe\", \"Sa…\n$ top_9      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_9_2    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_8      &lt;chr&gt; \"Safe\", \"Safe\", \"Safe\", \"Safe\", \"Safe\", \"Bottom Three\", \"Bo…\n$ top_8_2    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_7      &lt;chr&gt; \"Safe\", \"Bottom Two\", \"Bottom Three\", \"Safe\", \"Safe\", \"Safe…\n$ top_7_2    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_6      &lt;chr&gt; \"Safe\", \"Safe\", \"Bottom Three\", \"Safe\", \"Bottom Two\", \"Elim…\n$ top_6_2    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_5      &lt;chr&gt; \"Safe\", \"Safe\", \"Bottom Two\", \"Safe\", \"Eliminated\", NA, NA,…\n$ top_5_2    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_4      &lt;chr&gt; \"Safe\", \"Safe\", \"Bottom Two\", \"Eliminated\", NA, NA, NA, NA,…\n$ top_4_2    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ top_3      &lt;chr&gt; \"Safe\", \"Safe\", \"Eliminated\", NA, NA, NA, NA, NA, NA, NA, N…\n$ finale     &lt;chr&gt; \"Winner\", \"Runner-Up\", NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n\n\ncolSums(is.na(eliminations)) #Lot of missing values especially within the \"top_\" variables \n\n    season      place     gender contestant     top_36   top_36_2   top_36_3 \n         0          1          1          1        384        394        404 \n  top_36_4     top_32   top_32_2   top_32_3   top_32_4     top_30   top_30_2 \n       435        424        427        433        436        426        431 \n  top_30_3     top_25   top_25_2   top_25_3     top_24   top_24_2   top_24_3 \n       436        431        436        440        240        278        360 \n    top_20   top_20_2     top_16     top_14     top_13     top_12     top_11 \n       376        424        440        428        404        335        312 \n  top_11_2   wildcard   comeback     top_10      top_9    top_9_2      top_8 \n       434        350        456        306        348        447        335 \n   top_8_2      top_7    top_7_2      top_6    top_6_2      top_5    top_5_2 \n       440        344        442        366        450        381        451 \n     top_4    top_4_2      top_3     finale \n       396        452        411        417"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#finalists-data-set",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#finalists-data-set",
    "title": "Tidy Tuesday Exercise",
    "section": "Finalists Data set",
    "text": "Finalists Data set\n\ndplyr::glimpse(finalists) #COnvert birthdate to date?\n\nRows: 190\nColumns: 6\n$ Contestant  &lt;chr&gt; \"Kelly Clarkson\", \"Justin Guarini\", \"Nikki McKibbin\", \"Tam…\n$ Birthday    &lt;chr&gt; \"24-Apr-82\", \"28-Oct-78\", \"28-Sep-78\", \"26-Jul-79\", \"17-Ma…\n$ Birthplace  &lt;chr&gt; \"Fort Worth, Texas\", \"Columbus, Georgia\", \"Grand Prairie, …\n$ Hometown    &lt;chr&gt; \"Burleson, Texas\", \"Doylestown, Pennsylvania\", NA, \"Atlant…\n$ Description &lt;chr&gt; \"She performed Aretha Franklin's version of \\\"Respectand V…\n$ Season      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…\n\n\n\ncolSums(is.na(finalists)) #Missing ~1/2 observations for hometown\n\n Contestant    Birthday  Birthplace    Hometown Description      Season \n          0           1           6          88          12           0"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#ratings-data-set",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#ratings-data-set",
    "title": "Tidy Tuesday Exercise",
    "section": "Ratings Data set",
    "text": "Ratings Data set\n\ndplyr::glimpse(ratings) \n\nRows: 593\nColumns: 17\n$ season                  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ show_number             &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ episode                 &lt;chr&gt; \"Auditions\", \"Hollywood Week\", \"Top 30: Group …\n$ airdate                 &lt;chr&gt; \"June 11, 2002\", \"June 12, 2002\", \"June 18, 20…\n$ `18_49_rating_share`    &lt;chr&gt; \"4.8\", \"5.2\", \"5.2\", \"4.7\", \"4.5\", \"4.2\", \"5.3…\n$ viewers_in_millions     &lt;dbl&gt; 9.85, 11.24, 10.30, 9.47, 9.08, 8.53, 10.28, 7…\n$ timeslot_et             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ dvr_18_49               &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ dvr_viewers_millions    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ total_18_49             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ total_viewers_millions  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ weekrank                &lt;chr&gt; \"12\", \"6\", \"6\", \"22\", \"11\", \"17\", \"7\", \"26\", \"…\n$ ref                     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ share                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ nightlyrank             &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ rating_share_households &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ rating_share            &lt;chr&gt; \"6.1 / 11\", \"6.9 / 12\", \"6.2 / 11\", \"5.8 / 10\"…\n\nratings$airdate = as.numeric(as.Date(ratings$airdate, format = \"%B %d, %Y\"))#Convert airdate to date to numeric\nratings$'18_49_rating_share' = as.numeric(ratings$'18_49_rating_share') #Convert rating_share to numeric and N/A values to NA\n\nWarning: NAs introduced by coercion\n\nratings$weekrank = as.numeric(ratings$weekrank) #Convert week rank to numeric\n\nWarning: NAs introduced by coercion\n\n\n\ncolSums(is.na(ratings)) #Lot of missing values in columns \"18_49_rating_share\" through \"rating_share\" except viewers_in_millions\n\n                 season             show_number                 episode \n                      0                       0                       0 \n                airdate      18_49_rating_share     viewers_in_millions \n                     39                     396                       3 \n            timeslot_et               dvr_18_49    dvr_viewers_millions \n                    515                     539                     539 \n            total_18_49  total_viewers_millions                weekrank \n                    539                     539                     104 \n                    ref                   share             nightlyrank \n                    593                     449                     569 \nrating_share_households            rating_share \n                    515                     284"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#seasons-data-set",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#seasons-data-set",
    "title": "Tidy Tuesday Exercise",
    "section": "Seasons Data set",
    "text": "Seasons Data set\n\ndplyr::glimpse(seasons) \n\nRows: 18\nColumns: 10\n$ season           &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ winner           &lt;chr&gt; \"Kelly Clarkson\", \"Ruben Studdard\", \"Fantasia Barrino…\n$ runner_up        &lt;chr&gt; \"Justin Guarini\", \"Clay Aiken\", \"Diana DeGarmo\", \"Bo …\n$ original_release &lt;chr&gt; \"June 11 (2002-06-11) –September 4, 2002 (2002-09-04)…\n$ original_network &lt;chr&gt; \"Fox\", \"Fox\", \"Fox\", \"Fox\", \"Fox\", \"Fox\", \"Fox\", \"Fox…\n$ hosted_by        &lt;chr&gt; \"Ryan Seacrest; Brian Dunkleman\", \"Ryan Seacrest\", \"R…\n$ judges           &lt;chr&gt; \"Paula Abdul; Simon Cowell; Randy Jackson\", \"Paula Ab…\n$ no_of_episodes   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ finals_venue     &lt;chr&gt; \"Kodak Theatre\", \"Gibson Amphitheatre\", \"Kodak Theatr…\n$ mentor           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Jimmy Io…\n\nseasons$original_network = as.factor(seasons$original_network) #Convert network to factor\nseasons$hosted_by = as.factor(seasons$hosted_by) #Convert network to factor\nseasons$judges = as.factor(seasons$judges) #Convert network to factor\n\n\ncolSums(is.na(seasons)) #Sig. NAs in # of episodes and mentor\n\n          season           winner        runner_up original_release \n               0                0                0                0 \noriginal_network        hosted_by           judges   no_of_episodes \n               0                0                0               14 \n    finals_venue           mentor \n               3               16"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#songs-data-set",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#songs-data-set",
    "title": "Tidy Tuesday Exercise",
    "section": "Songs Data set",
    "text": "Songs Data set\n\ndplyr::glimpse(songs) \n\nRows: 2,429\nColumns: 8\n$ season     &lt;chr&gt; \"Season_01\", \"Season_01\", \"Season_01\", \"Season_01\", \"Season…\n$ week       &lt;chr&gt; \"20020618_top_30_group_1\", \"20020618_top_30_group_1\", \"2002…\n$ order      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1…\n$ contestant &lt;chr&gt; \"Tamyra Gray\", \"Jim Verraros\", \"Adriel Herrera\", \"Rodesia E…\n$ song       &lt;chr&gt; \"And I Am Telling You I'm Not Going\", \"When I Fall in Love\"…\n$ artist     &lt;chr&gt; \"Jennifer Holliday\", \"Doris Day\", \"Edwin McCain\", \"The Monk…\n$ song_theme &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ result     &lt;chr&gt; \"Advanced (1st)\", \"Advanced (3rd)\", \"Eliminated\", \"Eliminat…\n\n\n\ncolSums(is.na(songs)) #Lot of missing values in song_theme\n\n    season       week      order contestant       song     artist song_theme \n         0          0          0          0          0          0       1656 \n    result \n        30"
  }
]